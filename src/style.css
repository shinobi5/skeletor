:root {
    /* Base: base unit for project spacing */
    --bu: 4;

    /* Font: font-family */
    --font-primary: "arial, sans-serif";
    --font-secondary: "serif";
    --font-line-height-base: 1.8;

    /* Color: base */
    --color-heading: #111;
    --color-paragraph: #333;
    --color-hr: #333;
    --color-placeholder: #333;
    --color-selection: #2793c7;

    /* Color: brand */
    --color-primary: #111;
    --color-secondary: #222;
    --color-tertiary: #333; 
}
@media print {
	*,
	*:before,
	*:after,
	*:first-letter,
	*:first-line {
		background: transparent !important;
		color: #000 !important;
		box-shadow: none !important;
		text-shadow: none !important;
	}

	a,
	a:visited {
		text-decoration: underline;
	}

	a[href]:after {
		content: " (" attr(href) ")";
	}

	abbr[title]:after {
		content: " (" attr(title) ")";
	}

	/* 
		Don't show links that are fragment identifiers,
		or use the `javascript:` pseudo protocol
	*/
	a[href^="#"]:after,
	a[href^="javascript:"]:after {
		content: "";
	}

	pre,
	blockquote {
		border: 1px solid #000;
		page-break-inside: avoid;
	}

	/* 
		Printing tables:
		http://css-discuss.incutio.com/wiki/Printing_Tables
	*/	
	thead {
		display: table-header-group;
	}

	tr,
	img {
		page-break-inside: avoid;
	}

	p,
	h2,
	h3 {
		orphans: 3;
		widows: 3;
	}

	h2,
	h3 {
		page-break-after: avoid;
	}
}
*,
*::before,
*::after {
	box-sizing: inherit;
}

/* Remove text-shadow in selection highlight */
::selection {
	background: var(--color-selection);
	color: white;
	text-shadow: none;
}
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
	margin: 0;
	padding: 0;
	border: 0;
	font-size: 100%;
	font: inherit;
	vertical-align: baseline;
}

body {
	line-height: 1;
}

ol,
ul {
	list-style: none;
}

blockquote,
q {
	quotes: none;
}

blockquote:before,
blockquote:after,
q:before,
q:after {
	content: '';
	content: none;
}

table {
	border-collapse: collapse;
	border-spacing: 0;
}

/* Remove default fieldset styles */
fieldset {
	border: 0;
	margin: 0;
	padding: 0;
}

/* Allow only vertical resizing of textareas */
textarea {
	resize: vertical;
}
html {
	box-sizing: border-box;
	/*
		Font-size is set to a percentage of the user agent font size setting
		so users have the option of controlling the base font size in their 
		browser settings.

		If rem units are used (with em units for media queries) then the 
		project will scale to the font size setting.

		Px units are fine but there's a small accessibility gain that is a
		free win by building the project with rem values.

		62.5% is set to make calculations in the project easier and it's
		based on a common standard of 16px for the default browser font size. 
		62.5% of 16 = 10. This means we can calculate values like this 20px = 2rem 
		and 300px = 30rem (divide px value by 10). 
	*/
	font-size: 62.5%;
	line-height: var(--font-line-height-base);
}

body {
	font-family: var(--font-primary);
	font-size: var(--font-size-base);
	-webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;
}

/* Remove the gaps */
audio,
canvas,
iframe,
img,
svg,
video {
	vertical-align: middle;
}
.o-container {
	position: relative;
	width: auto;
	max-width: 120rem;
	margin-left: auto;
	margin-right: auto;
	padding-left: 2rem;
	padding-right: 2rem;
}
.o-flex {
    display: flex;
}

.o-flex--center {
    align-items: center;
    justify-content: center;
}.o-grid {
    display: grid;
}
.u-word-wrap {
	-ms-word-break: break-all;
	word-break: break-all;
	word-break: break-word;
	-webkit-hyphens: auto;
	-moz-hyphens: auto;
	hyphens: auto;
}

.u-ellipsis {
	overflow: hidden;
	white-space: nowrap;
	text-overflow: ellipsis;
}/* Hide from screen readers */
.u-hidden {
	display: none !important;
}

/* Hide visually and from screen readers, but maintain layout */
.u-invisible {
	visibility: hidden;
}

/* 
	Hide only visually, but have it available for screen readers:
	http://snook.ca/archives/html_and_css/hiding-content-for-accessibility 
*/
.u-screen-reader {
	margin: -1px;
	padding: 0;
	width: 1px;
	height: 1px;
	overflow: hidden;
	clip: rect(0 0 0 0);
	clip: rect(0, 0, 0, 0);
	position: absolute;
}

/*	
	Extends the .u-visuallyhidden class to allow the element to be focusable
	when navigated to via the keyboard:
	https://www.drupal.org/node/897638 
*/
.u-screen-reader.u-focusable:focus,
.u-screen-reader.u-focusable:active {
	clip: auto;
	height: auto;
	margin: 0;
	overflow: visible;
	position: static;
	width: auto;
}
